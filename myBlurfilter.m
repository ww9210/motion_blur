function blur_filter=myBlurfilter(x,y,flag)
%flag=1 :using fspecial(length=2,angle=motion angle)
global sim

%% flag=1 means using fspecial
if(flag==1)
    theta = atan2(x,y)*180/pi;
    
    length=abs(norm([x,y]))/5;
    if (length==0)
        length=1;
    end
    
    blur_filter = fspecial('motion',2.5,theta);
    return;
end

%% process the filter generated by fspecial
%  here, many different stratigies can be applyied
%% flag=2 means using nonlinear psf
% if(flag==2)
%     theta = atan2(x,y)*180/pi;
%     tmp = fspecial('motion',2,theta);
%     if(theta==0)
%         tmp=zeros(3,3);
%         tmp(2,:)=fspecial('motion',2,theta);
%     end
%     if(theta==90)
%         tmp=zeros(3,3);
%         tmp(:,2)=fspecial('motion',2,theta);
%     end
%     if(theta==180)
%         tmp=zeros(3,3);
%         tmp(2,:)=fspecial('motion',2,theta);
%     end
%     if(theta==-90)
%         tmp=zeros(3,3);
%         tmp(2,:)=fspecial('motion',2,theta);
%     end
%     %[rows,cols] = size(nonlinear_parameter)
%     nonlinear = nonlinear_parameter(filter_nom,:);
%     nonlinear_matrix = zeros(3,3);
%     
%     nonlinear_matrix(1,1) = nonlinear(1);
%     nonlinear_matrix(3,1) = nonlinear(1);
%     nonlinear_matrix(3,3) = nonlinear(1);
%     nonlinear_matrix(1,3) = nonlinear(1);
%     nonlinear_matrix(2,1) = nonlinear(2);
%     nonlinear_matrix(1,2) = nonlinear(2);
%     nonlinear_matrix(2,3) = nonlinear(2);
%     nonlinear_matrix(3,2) = nonlinear(2);
%     nonlinear_matrix(2,2) = nonlinear(3);
%     blur_filter = tmp.*nonlinear_matrix;
%     blur_filter = blur_filter/norm(blur_filter,1);
%     % blur_filter
%     return;
% end
% %% flag==3 means using another nonlinear psf
% if(flag==3)
%     theta = atan2(x,y)*180/pi;
%     tmp = fspecial('motion',2,theta);
%     if(theta==0)
%         tmp=zeros(3,3);
%         tmp(2,:)=fspecial('motion',2,theta);
%     end
%     if(theta==90)
%         tmp=zeros(3,3);
%         tmp(:,2)=fspecial('motion',2,theta);
%     end
%     if(theta==180)
%         tmp=zeros(3,3);
%         tmp(2,:)=fspecial('motion',2,theta);
%     end
%     if(theta==-90)
%         tmp=zeros(3,3);
%         tmp(2,:)=fspecial('motion',2,theta);
%     end
%     %[rows,cols] = size(nonlinear_parameter)
%     nonlinear = nonlinear_parameter(filter_nom,:);
%     nonlinear_matrix = zeros(3,3);
%     
%     nonlinear_matrix(1,1) = nonlinear(3);
%     nonlinear_matrix(3,1) = nonlinear(3);
%     nonlinear_matrix(3,3) = nonlinear(3);
%     nonlinear_matrix(1,3) = nonlinear(3);
%     nonlinear_matrix(2,1) = nonlinear(2);
%     nonlinear_matrix(1,2) = nonlinear(2);
%     nonlinear_matrix(2,3) = nonlinear(2);
%     nonlinear_matrix(3,2) = nonlinear(2);
%     nonlinear_matrix(2,2) = nonlinear(1);
%     blur_filter = tmp.*nonlinear_matrix;
%     blur_filter = blur_filter/norm(blur_filter,1);
%     % blur_filter
% end
%% flag==4 means using the intersection filter
if(flag==4)
    theta = atan2(x,y)*180/pi;
    
    length=abs(norm([x,y]))/5;
    if (length==0)
        length=1;
    end
    
    blur_filter = filter_intersection(3.5,theta);
    return;
end
