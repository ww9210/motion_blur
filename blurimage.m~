function blurred = blurimage(original,filter_2D, acc_x, acc_y)
% calculate the image block after blurring
% procedure: 1. blur the image with 2D filter
%            2. after conv, result longer than original block. have to
%            pay attention to the pixel position after blurring
%            3. positive -> no shift, negative -> shift with 

% 2D blurring 
temp = conv2(filter_2D, original);
[delta_y, delta_x] = size(filter_2D);

[length_y,length_x] = size(temp);

if acc_x >= 0 
    start_x = 1;
    end_x   = length_x-delta_x+1;
else
    end_x  = length_x;
    start_x = delta_x;
end

if acc_y >=0
    start_y = 1;
    end_y   = length_y-delta_y+1;        
else
    end_y  = length_y;
    start_y = delta_y;   
end
A = temp(start_y:end_y,start_x:end_x);
[height, width] = size(A);

% interpolation for 1/4 accuracy
hfilter = [-1, 4, -11, 40, 40, -11, 4, -1];
hfilter_tran = hfilter';
qfilter = [-1, 4, -10, 58, 17, -5, 1];
qfilter_tran = qfilter';

h_vert = zeros(height,8); 
q_vert = zeros(height,7);
h_hori = zeros(8,sim.frame_width);
q_hori = zeros(7,sim.frame_width);


